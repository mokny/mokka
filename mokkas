#!/usr/bin/python3
import threading
import time
import uuid
import random
from multiprocessing.connection import Listener, Client
from contextlib import closing
import socket
import os
import sys

tlock = threading.Lock()

class IPCOutgoingConnection(threading.Thread):
    def __init__(self, conn):  
        threading.Thread.__init__(self)
        self.conn = conn

    def run(self):
        msg = ''
        while True:
            try:
                msg = self.conn.recv()
                with tlock:
                    msgHandler(self, msg)
            except Exception as err:
                break

    def send(self, data):
        self.conn.send(data)

    def disconnect(self):
        self.conn.close()

def msgHandler(con, msg):
    if isinstance(msg, dict):
        if 'method' in msg:
            method = msg['method']
            if 'payload' in msg:
                payload = msg['payload']

                if method == 'OUTPUT':
                    print(payload)
                    
                elif method == 'INPUT':
                    con.send(input(payload))
                    
    pass

def connect(port, secret):
    try:
        address = ('127.0.0.1', port)
        conn = Client(address, authkey=str.encode(str(secret)))
        client = IPCOutgoingConnection(conn)
        client.start()
        return client
    except:
        return False



def init():
    os.chdir(os.path.dirname(os.path.abspath(__file__)))
    i = 0
    while True:
        if i > 20:
            print("Could not start daemon.")
            break
        try:
            cwd = os.path.join(os.path.expanduser('~'), 'mokkabase')
            f = open(os.path.join(cwd,'.port'), "r")
            port = int(f.read())

            f = open(os.path.join(cwd,'.secret'), "r")
            secret = str(f.read())

            params = sys.argv[1:]
            client = connect(port, secret)

            if client:
                client.send(params)
                break
            else:
                os.system("nohup "+sys.executable+" mokkad > /dev/null &")
            time.sleep(0.2)
        except:
            os.system("nohup "+sys.executable+" mokkad > /dev/null &")
            time.sleep(0.2)
        i += 1
init()